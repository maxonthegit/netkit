# Warning: this Makefile is only meant to be invoked from the main
# Makefile.

#     This Makefile is part of Netkit, a network emulation environment
#     based on the integration of several existing pieces of software.
#     For more information: http://www.netkit.org/
#
#     Copyright (C) 2015 Massimo Rimondini (rimondin@ing.uniroma3.it)
#     Computer Networks Research Group, Roma Tre University
# 
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, version 3 of the License.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.


OPENVSWITCH_GITHUB_URL:=https://github.com/openvswitch/ovs.git

OPENVSWITCH_BUILD_DIR:=$(CURDIR)/ovs-build-$(TARGET_ARCH)

# The following variable indicates all the patch files that should be
# applied to Open vSwitch before compiling.
OPENVSWITCH_PATCHES:=$(wildcard $(OTHER_PATCHES_DIR)/openvswitch-*)

# (Optional) Specify here a specific commit to checkout. If this variable
# is undefined, then the latest version from Github is downloaded and
# compiled.
#OPENVSWITCH_COMMIT_SHA:=bc651c85497d7a8c32e83b44986dae27dec3bcd5   # 01 Jul 2015 (ovs 2.4.90)
#OPENVSWITCH_COMMIT_SHA:=4ed471445ebbf2734be5cc99137c36335c079b6c   # 30 Sep 2015 (ovs 2.4.90)
OPENVSWITCH_COMMIT_SHA:=ab58aa48a198c3210021070f82042d4dea1e4b41   # 14 Dec 2015 (ovs 2.5)

# SSL is apparently unsupported for 32 bit builds
# (see also https://github.com/openvswitch/ovs/blob/master/.travis.yml)
ifeq ($(TARGET_ARCH),i386)
OPENVSWITCH_CONFIGURE_OPTS=--disable-ssl
endif


$(OPENVSWITCH_BUILD_DIR)/.patched: $(OPENVSWITCH_PATCHES) $(OPENVSWITCH_BUILD_DIR)/ovs/boot.sh
	$(call display_message,openvswitch,"Applying patches to Open vSwitch")
	for DIFF_FILE in $(OPENVSWITCH_PATCHES); do patch -p1 -d $(OPENVSWITCH_BUILD_DIR)/ovs < $$DIFF_FILE; done
	touch $(OPENVSWITCH_BUILD_DIR)/.patched

.openvswitch-compiled-$(TARGET_ARCH): $(OPENVSWITCH_BUILD_DIR)/.patched $(OPENVSWITCH_BUILD_DIR)/ovs/boot.sh
	$(call display_message,openvswitch,"Building Debian packages")
# The following commands automatically invoke boot.sh if required
# At the end, "make clean" is executed to avoid some problems with
# the immediately subsequent OVS build.
	dpkg-architecture --help
	@echo dpkg-architecture -a $(TARGET_ARCH_DEBIAN) -t x86_64-linux-gnu -f
	dpkg-architecture -a$(TARGET_ARCH_DEBIAN) -tx86_64-linux-gnu -f
	dpkg-architecture -a $(TARGET_ARCH_DEBIAN) -t x86_64-linux-gnu -f
	dpkg-architecture -L
	cd $(OPENVSWITCH_BUILD_DIR)/ovs && \
	   export $(shell dpkg-architecture -a $(TARGET_ARCH_DEBIAN) -t x86_64-linux-gnu -f) && \
	   DATAPATH_CONFIGURE_OPTS="$(OPENVSWITCH_CONFIGURE_OPTS)" DEB_CFLAGS_SET="$(COMPILE_FLAGS)" DEB_BUILD_OPTIONS='parallel=$(shell nproc) nocheck' fakeroot debian/rules binary && \
	   make clean
	$(call display_message,openvswitch,"Building Open vSwitch")
	cd $(OPENVSWITCH_BUILD_DIR)/ovs && ./configure --prefix="$(FILESYSTEM_MOUNT_DIR)" --with-linux="$(UNPACKED_KERNEL_DIR)" $(OPENVSWITCH_CONFIGURE_OPTS)
	cd $(OPENVSWITCH_BUILD_DIR)/ovs && $(MAKE) -j $(shell nproc) CFLAGS="$(COMPILE_FLAGS)" ARCH=um SUBARCH=$(TARGET_ARCH)
	touch .openvswitch-compiled-$(TARGET_ARCH)

openvswitch-install: .openvswitch-compiled-$(TARGET_ARCH)
# Check that the filesystem image is currently mounted
	mountpoint $(FILESYSTEM_MOUNT_DIR)
	$(call display_message,openvswitch,"Copying Debian packages inside the filesystem image for later installation")
	cp $(wildcard $(OPENVSWITCH_BUILD_DIR)/*_$(TARGET_ARCH_DEBIAN).deb) $(wildcard $(OPENVSWITCH_BUILD_DIR)/*_all.deb) $(FILESYSTEM_MOUNT_DIR)/opt
	$(call display_message,openvswitch,"Installing kernel modules")
	cd $(OPENVSWITCH_BUILD_DIR)/ovs && $(MAKE) -j $(shell nproc) CFLAGS="$(COMPILE_FLAGS)" ARCH=um SUBARCH=$(TARGET_ARCH) INSTALL_MOD_PATH="$(KERNEL_TARGET_MODULES_DIR)" modules_install

$(OPENVSWITCH_BUILD_DIR)/ovs/boot.sh:
	$(call display_message,openvswitch,"Cloning openvswitch repository")
	mkdir -p $(OPENVSWITCH_BUILD_DIR)
	cd $(OPENVSWITCH_BUILD_DIR) && git clone $(OPENVSWITCH_GITHUB_URL)
ifdef OPENVSWITCH_COMMIT_SHA
# Switch to a specific commit
	cd $(OPENVSWITCH_BUILD_DIR)/ovs && git checkout $(OPENVSWITCH_COMMIT_SHA)
endif

clean-openvswitch:
	rm -fr $(OPENVSWITCH_BUILD_DIR)

